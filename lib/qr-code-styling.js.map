{"version":3,"sources":["webpack://QRCodeStyling/webpack/universalModuleDefinition","webpack://QRCodeStyling/webpack/bootstrap","webpack://QRCodeStyling/./node_modules/qrcode-generator/qrcode.js","webpack://QRCodeStyling/./src/constants/modes.ts","webpack://QRCodeStyling/./src/tools/merge.ts","webpack://QRCodeStyling/./src/constants/qrTypes.ts","webpack://QRCodeStyling/./src/constants/errorCorrectionPercents.ts","webpack://QRCodeStyling/./src/tools/drawUtils.ts","webpack://QRCodeStyling/./src/core/QRDot.ts","webpack://QRCodeStyling/./src/core/QREye.ts","webpack://QRCodeStyling/./src/core/QRCanvas.ts","webpack://QRCodeStyling/./src/tools/calculateImageSize.ts","webpack://QRCodeStyling/./src/constants/errorCorrectionLevels.ts","webpack://QRCodeStyling/./src/core/QROptions.ts","webpack://QRCodeStyling/./src/core/QRCodeStyling.ts","webpack://QRCodeStyling/./src/tools/getMode.ts","webpack://QRCodeStyling/./src/tools/downloadURI.ts","webpack://QRCodeStyling/./src/constants/dotTypes.ts","webpack://QRCodeStyling/./src/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","qrcode","typeNumber","errorCorrectionLevel","_typeNumber","_errorCorrectionLevel","QRErrorCorrectionLevel","_modules","_moduleCount","_dataCache","_dataList","_this","makeImpl","test","maskPattern","moduleCount","Array","row","col","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","pos","QRUtil","getPatternPosition","length","j","bits","getBCHTypeNumber","mod","Math","floor","data","getBCHTypeInfo","inc","bitIndex","byteIndex","maskFunc","getMaskFunction","dark","dataList","rsBlocks","QRRSBlock","getRSBlocks","buffer","qrBitBuffer","put","getMode","getLength","getLengthInBits","write","totalDataCount","dataCount","putBit","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","getBuffer","rsPoly","getErrorCorrectPolynomial","modPoly","qrPolynomial","modIndex","getAt","totalCodeCount","index","createBytes","addData","newData","qrNumber","qrAlphaNum","qr8BitByte","qrKanji","push","isDark","getModuleCount","make","minLostPoint","pattern","lostPoint","getLostPoint","getBestMaskPattern","createTableTag","cellSize","margin","qrHtml","createSvgTag","alt","title","opts","arguments","text","id","mr","rect","size","qrSvg","scalable","escapeXml","join","trim","createDataURL","min","x","y","createImgTag","img","escaped","charAt","createASCII","r1","r2","blocks","blocksLastLineNoMargin","ascii","substring","_createHalfASCII","white","black","line","renderTo2dContext","context","fillStyle","fillRect","stringToBytes","stringToBytesFuncs","bytes","charCodeAt","createStringToBytes","unicodeData","numChars","unicodeMap","bin","base64DecodeInputStream","read","b","count","b0","b1","v","String","fromCharCode","unknownChar","PATTERN_POSITION_TABLE","getBCHDigit","QRMode","L","M","Q","H","QRMaskPattern","digit","errorCorrectLength","a","multiply","QRMath","gexp","type","sameCount","darkCount","abs","EXP_TABLE","LOG_TABLE","num","shift","_num","e","glog","ratio","RS_BLOCK_TABLE","qrRSBlock","rsBlock","getRsBlockTable","list","_buffer","_length","bufIndex","bit","_mode","_data","strToNum","chatToNum","getCode","_bytes","code","byteArrayOutputStream","writeByte","off","len","str","_str","_pos","_buflen","match","decode","width","height","getPixel","gif","_width","_height","pixel","out","writeString","writeShort","raster","getLZWRaster","writeBytes","lzwMinCodeSize","clearCode","endCode","bitLength","table","lzwTable","add","byteOut","bitOut","_out","_bitLength","_bitBuffer","bitOutputStream","dataIndex","contains","indexOf","flush","toByteArray","_map","_size","gifImage","setPixel","base64","_base64","writeEncoded","encode","padlen","toString","base64EncodeOutputStream","utf8","charcode","toUTF8Array","numeric","alphanumeric","byte","kanji","isObject","obj","isArray","mergeDeep","target","sources","source","undefined","keys","forEach","targetValue","sourceValue","concat","assign","drawSquare","drawCircle","circleRadiusDivisor","beginPath","arc","PI","fill","drawLine","xFrom","yFrom","xTo","yTo","moveTo","lineTo","stroke","drawArcCorner","cornerRotation","this","_context","_type","draw","getNeighbor","drawFunctionArgs","_drawRounded","options","_options","drawFrameFunctionArgs","drawBallFunctionArgs","lineWidth","eyeFramesOptions","color","strokeStyle","_drawFrame1","_drawFrame2","_drawFrame0","eyeBallsOptions","_drawBall0","_positionProbeModules","_canvas","document","createElement","getContext","getCanvas","clear","canvasContext","clearRect","drawQR","qr","drawBackground","_qr","setupPositionProbeModules","drawEyes","image","drawImageAndDots","drawDots","Promise","resolve","backgroundOptions","filter","minSize","dotSize","xBeginning","yBeginning","dot","dotsOptions","xOffset","yOffset","reject","Image","coverLevel","imageOptions","imageSize","errorCorrectionPercents","qrOptions","_image","onload","maxHiddenDots","originalHeight","originalWidth","maxHiddenAxisDots","hideDots","hideYDots","hideXDots","k","sqrt","ceil","round","hideBackgroundDots","drawImage","src","canvas","qrEye","save","translate","scale","restore","qrTypes","errorCorrectionLevels","update","_clearContainer","container","innerHTML","QRCodeStyling","_container","modes","append","appendChild","download","extension","uri","link","toDataURL","href","body","click","removeChild","getQRCanvas","dots","rounded","square"],"mappings":"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","file":"qr-code-styling.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"QRCodeStyling\"] = factory();\n\telse\n\t\troot[\"QRCodeStyling\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('██');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n","interface Modes {\r\n  [key: string]: Mode;\r\n}\r\n\r\nexport default {\r\n  numeric: \"Numeric\",\r\n  alphanumeric: \"Alphanumeric\",\r\n  byte: \"Byte\",\r\n  kanji: \"Kanji\"\r\n} as Modes;\r\n","const isObject = (obj: object): boolean => !!obj && typeof obj === \"object\" && !Array.isArray(obj);\r\n\r\nexport default function mergeDeep(target: UnknownObject, ...sources: UnknownObject[]): UnknownObject {\r\n  if (!sources.length) return target;\r\n  const source = sources.shift();\r\n  if (source === undefined || !isObject(target) || !isObject(source)) return target;\r\n  target = { ...target };\r\n  Object.keys(source).forEach((key: string): void => {\r\n    const targetValue = target[key];\r\n    const sourceValue = source[key];\r\n\r\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\r\n      target[key] = targetValue.concat(sourceValue);\r\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\r\n      target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\r\n    } else {\r\n      target[key] = sourceValue;\r\n    }\r\n  });\r\n\r\n  return mergeDeep(target, ...sources);\r\n}\r\n","interface TypesMap {\r\n  [key: number]: TypeNumber;\r\n}\r\n\r\nconst qrTypes: TypesMap = {};\r\n\r\nfor (let type = 0; type <= 40; type++) {\r\n  qrTypes[type] = type as TypeNumber;\r\n}\r\n\r\n// 0 types is autodetect\r\n\r\n// types = {\r\n//     0: 0,\r\n//     1: 1,\r\n//     ...\r\n//     40: 40\r\n// }\r\n\r\nexport default qrTypes;\r\n","interface ErrorCorrectionPercents {\r\n  [key: string]: number;\r\n}\r\n\r\nexport default {\r\n  L: 0.07,\r\n  M: 0.15,\r\n  Q: 0.25,\r\n  H: 0.3\r\n} as ErrorCorrectionPercents;\r\n","export type DrawFunctionArgs = {\r\n  x: number;\r\n  y: number;\r\n  size: number;\r\n  context: CanvasRenderingContext2D;\r\n};\r\ntype DrawCornerRotation = \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\";\r\n\r\nexport const drawSquare = function({ x, y, size, context }: DrawFunctionArgs): void {\r\n  context.fillRect(x, y, size, size);\r\n};\r\n\r\nexport const drawCircle = function({ x, y, size, context }: DrawFunctionArgs, circleRadiusDivisor = 2): void {\r\n  context.beginPath();\r\n  context.arc(x + size / 2, y + size / 2, size / circleRadiusDivisor, 0, Math.PI * 2);\r\n  context.fill();\r\n};\r\n\r\nexport const drawLine = function(\r\n  context: CanvasRenderingContext2D,\r\n  xFrom: number,\r\n  yFrom: number,\r\n  xTo: number,\r\n  yTo: number\r\n): void {\r\n  context.beginPath();\r\n  context.moveTo(xFrom, yFrom);\r\n  context.lineTo(xTo, yTo);\r\n  context.stroke();\r\n};\r\n\r\nexport const drawArcCorner = function(\r\n  { x, y, size, context }: DrawFunctionArgs,\r\n  cornerRotation: DrawCornerRotation\r\n): void {\r\n  context.beginPath();\r\n\r\n  switch (cornerRotation) {\r\n    case \"top-left\":\r\n    default:\r\n      context.arc(x + size * 2, y + size * 2, size + size / 2, -Math.PI, -Math.PI / 2);\r\n      break;\r\n    case \"top-right\":\r\n      context.arc(x, y + size * 2, size + size / 2, -Math.PI / 2, 0);\r\n      break;\r\n    case \"bottom-left\":\r\n      context.arc(x + size * 2, y, size + size / 2, Math.PI / 2, Math.PI);\r\n      break;\r\n    case \"bottom-right\":\r\n      context.arc(x, y, size + size / 2, 0, Math.PI / 2);\r\n      break;\r\n  }\r\n  context.stroke();\r\n};\r\n","import { drawCircle, DrawFunctionArgs, drawSquare } from \"../tools/drawUtils\";\r\n\r\ntype GetNeighbor = (x: number, y: number) => boolean;\r\n\r\nexport default class QRDot {\r\n  _context: CanvasRenderingContext2D;\r\n  _type: DotType;\r\n\r\n  constructor({ context, type }: { context: CanvasRenderingContext2D; type: DotType }) {\r\n    this._context = context;\r\n    this._type = type;\r\n  }\r\n\r\n  draw(x: number, y: number, size: number, getNeighbor: GetNeighbor): void {\r\n    const context = this._context;\r\n    const type = this._type;\r\n    const drawFunctionArgs = { x, y, size, context, getNeighbor };\r\n\r\n    switch (type) {\r\n      case \"dots\":\r\n        drawCircle(drawFunctionArgs);\r\n        break;\r\n      case \"small-dots\":\r\n        drawCircle(drawFunctionArgs, 3);\r\n        break;\r\n      case \"rounded\":\r\n        this._drawRounded(drawFunctionArgs, getNeighbor);\r\n        break;\r\n      case \"square\":\r\n      default:\r\n        drawSquare(drawFunctionArgs);\r\n        break;\r\n    }\r\n  }\r\n\r\n  _drawRounded({ x, y, size, context }: DrawFunctionArgs, getNeighbor: GetNeighbor): void {\r\n    context.beginPath();\r\n    context.moveTo(x, y + size / 2);\r\n\r\n    if (getNeighbor(-1, 0) || getNeighbor(0, -1)) {\r\n      context.lineTo(x, y);\r\n      context.lineTo(x + size / 2, y);\r\n    } else {\r\n      context.arc(x + size / 2, y + size / 2, size / 2, -Math.PI, -Math.PI / 2);\r\n    }\r\n\r\n    if (getNeighbor(0, -1) || getNeighbor(1, 0)) {\r\n      context.lineTo(x + size, y);\r\n      context.lineTo(x + size, y + size / 2);\r\n    } else {\r\n      context.arc(x + size / 2, y + size / 2, size / 2, -Math.PI / 2, 0);\r\n    }\r\n\r\n    if (getNeighbor(1, 0) || getNeighbor(0, 1)) {\r\n      context.lineTo(x + size, y + size);\r\n      context.lineTo(x + size / 2, y + size);\r\n    } else {\r\n      context.arc(x + size / 2, y + size / 2, size / 2, 0, Math.PI / 2);\r\n    }\r\n\r\n    if (getNeighbor(0, 1) || getNeighbor(-1, 0)) {\r\n      context.lineTo(x, y + size);\r\n      context.lineTo(x, y + size / 2);\r\n    } else {\r\n      context.arc(x + size / 2, y + size / 2, size / 2, Math.PI / 2, Math.PI);\r\n    }\r\n\r\n    context.fill();\r\n  }\r\n}\r\n","import { drawArcCorner, DrawFunctionArgs, drawLine, drawSquare } from \"../tools/drawUtils\";\r\nimport { Options } from \"./QROptions\";\r\n\r\nexport default class QREye {\r\n  _context: CanvasRenderingContext2D;\r\n  _options: Options;\r\n\r\n  constructor({ context, options }: { context: CanvasRenderingContext2D; options: Options }) {\r\n    this._context = context;\r\n    this._options = options;\r\n  }\r\n\r\n  draw(x: number, y: number, size: number): void {\r\n    const context = this._context;\r\n    const options = this._options;\r\n    const drawFrameFunctionArgs = { x, y, size, context };\r\n    const drawBallFunctionArgs = { x: x + 2 * size, y: y + 2 * size, size, context };\r\n\r\n    context.lineWidth = size;\r\n\r\n    context.fillStyle = options.eyeFramesOptions.color;\r\n    context.strokeStyle = options.eyeFramesOptions.color;\r\n    switch (options.eyeFramesOptions.type) {\r\n      case 1:\r\n        this._drawFrame1(drawFrameFunctionArgs);\r\n        break;\r\n      case 2:\r\n        this._drawFrame2(drawFrameFunctionArgs);\r\n        break;\r\n      case 0:\r\n      default:\r\n        this._drawFrame0(drawFrameFunctionArgs);\r\n        break;\r\n    }\r\n\r\n    context.fillStyle = options.eyeBallsOptions.color;\r\n    context.strokeStyle = options.eyeBallsOptions.color;\r\n    switch (options.eyeBallsOptions.type) {\r\n      case 0:\r\n      default:\r\n        this._drawBall0(drawBallFunctionArgs);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Frame 0\r\n   * - Square\r\n   */\r\n  _drawFrame0({ x, y, size, context }: DrawFunctionArgs): void {\r\n    drawLine(context, x, y + size / 2, x + size * 7, y + size / 2); // top\r\n    drawLine(context, x, y + size * 6 + size / 2, x + size * 7, y + size * 6 + size / 2); // bottom\r\n    drawLine(context, x + size / 2, y + size, x + size / 2, y + size * 6); // left\r\n    drawLine(context, x + size * 6 + size / 2, y + size, x + size * 6 + size / 2, y + size * 6); // right\r\n  }\r\n\r\n  /**\r\n   * Frame 1\r\n   * - square with rounded corners\r\n   */\r\n  _drawFrame1({ x, y, size, context }: DrawFunctionArgs): void {\r\n    drawArcCorner({ x, y, size, context }, \"top-left\");\r\n    drawArcCorner({ x: x + size * 5, y, size, context }, \"top-right\");\r\n    drawArcCorner({ x, y: y + size * 5, size, context }, \"bottom-left\");\r\n    drawArcCorner({ x: x + size * 5, y: y + size * 5, size, context }, \"bottom-right\");\r\n\r\n    drawLine(context, x + size * 2, y + size / 2, x + size * 5, y + size / 2); // top\r\n    drawLine(context, x + size * 2, y + size * 6 + size / 2, x + size * 5, y + size * 6 + size / 2); // bottom\r\n    drawLine(context, x + size / 2, y + size * 2, x + size / 2, y + size * 5); // left\r\n    drawLine(context, x + size * 6 + size / 2, y + size * 2, x + size * 6 + size / 2, y + size * 5); // right\r\n  }\r\n\r\n  /**\r\n   * Frame 2\r\n   * - square with rounded corners\r\n   */\r\n  _drawFrame2({ x, y, size, context }: DrawFunctionArgs): void {\r\n    drawArcCorner({ x, y, size, context }, \"top-left\");\r\n    drawArcCorner({ x: x + size * 5, y, size, context }, \"top-right\");\r\n    drawArcCorner({ x, y: y + size * 5, size, context }, \"bottom-left\");\r\n\r\n    drawLine(context, x + size * 2, y + size / 2, x + size * 5, y + size / 2); // top\r\n    drawLine(context, x + size * 2, y + size * 6 + size / 2, x + size * 7, y + size * 6 + size / 2); // bottom\r\n    drawLine(context, x + size / 2, y + size * 2, x + size / 2, y + size * 5); // left\r\n    drawLine(context, x + size * 6 + size / 2, y + size * 2, x + size * 6 + size / 2, y + size * 6); // right\r\n  }\r\n\r\n  _drawBall0({ x, y, size, context }: DrawFunctionArgs): void {\r\n    drawSquare({ x, y, size: size * 3, context });\r\n  }\r\n}\r\n","import calculateImageSize from \"../tools/calculateImageSize\";\r\nimport errorCorrectionPercents from \"../constants/errorCorrectionPercents\";\r\nimport QRDot from \"./QRDot\";\r\nimport { Options } from \"./QROptions\";\r\nimport QREye from \"./QREye\";\r\n\r\ntype FilterFunction = (i: number, j: number) => boolean;\r\n\r\nexport default class QRCanvas {\r\n  _canvas: HTMLCanvasElement;\r\n  _options: Options;\r\n  _qr?: QRCode;\r\n  _image?: HTMLImageElement;\r\n  private _positionProbeModules: any = {};\r\n\r\n  //TODO don't pass all options to this class\r\n  constructor(options: Options) {\r\n    this._canvas = document.createElement(\"canvas\");\r\n    this._canvas.width = options.width;\r\n    this._canvas.height = options.height;\r\n    this._options = options;\r\n  }\r\n\r\n  get context(): CanvasRenderingContext2D | null {\r\n    return this._canvas.getContext(\"2d\");\r\n  }\r\n\r\n  get width(): number {\r\n    return this._canvas.width;\r\n  }\r\n\r\n  get height(): number {\r\n    return this._canvas.height;\r\n  }\r\n\r\n  getCanvas(): HTMLCanvasElement {\r\n    return this._canvas;\r\n  }\r\n\r\n  clear(): void {\r\n    const canvasContext = this.context;\r\n\r\n    if (canvasContext) {\r\n      canvasContext.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n  }\r\n\r\n  drawQR(qr: QRCode): Promise<void> {\r\n    this.clear();\r\n    this.drawBackground();\r\n    this._qr = qr;\r\n\r\n    this.setupPositionProbeModules(0, 0);\r\n    this.setupPositionProbeModules(this._qr.getModuleCount() - 7, 0);\r\n    this.setupPositionProbeModules(0, this._qr.getModuleCount() - 7);\r\n    this.drawEyes();\r\n\r\n    if (this._options.image) {\r\n      return this.drawImageAndDots();\r\n    } else {\r\n      this.drawDots();\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  drawBackground(): void {\r\n    const canvasContext = this.context;\r\n    const options = this._options;\r\n\r\n    if (canvasContext) {\r\n      canvasContext.fillStyle = options.backgroundOptions.color;\r\n      canvasContext.fillRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n  }\r\n\r\n  drawDots(filter?: FilterFunction): void {\r\n    if (!this._qr) {\r\n      throw \"QR code is not defined\";\r\n    }\r\n\r\n    const canvasContext = this.context;\r\n\r\n    if (!canvasContext) {\r\n      throw \"QR code is not defined\";\r\n    }\r\n\r\n    const options = this._options;\r\n    const count = this._qr.getModuleCount();\r\n\r\n    if (count > options.width || count > options.height) {\r\n      throw \"The canvas is too small.\";\r\n    }\r\n\r\n    const minSize = Math.min(options.width, options.height);\r\n    const dotSize = Math.floor(minSize / count);\r\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\r\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\r\n    const dot = new QRDot({ context: canvasContext, type: options.dotsOptions.type });\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      for (let j = 0; j < count; j++) {\r\n        if (filter && !filter(i, j)) {\r\n          continue;\r\n        }\r\n        if (!this._qr.isDark(i, j)) {\r\n          continue;\r\n        }\r\n        if (i in this._positionProbeModules && j in this._positionProbeModules[i]) {\r\n          continue;\r\n        }\r\n\r\n        canvasContext.fillStyle = options.dotsOptions.color;\r\n        dot.draw(\r\n          xBeginning + i * dotSize,\r\n          yBeginning + j * dotSize,\r\n          dotSize,\r\n          (xOffset: number, yOffset: number): boolean => {\r\n            if (i + xOffset < 0 || j + yOffset < 0 || i + xOffset >= count || j + yOffset >= count) return false;\r\n            if (filter && !filter(i + xOffset, j + yOffset)) return false;\r\n            return !!this._qr && this._qr.isDark(i + xOffset, j + yOffset);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  drawImageAndDots(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this._qr) {\r\n        return reject(\"QR code is not defined\");\r\n      }\r\n\r\n      const canvasContext = this.context;\r\n\r\n      if (!canvasContext) {\r\n        return reject(\"QR code is not defined\");\r\n      }\r\n\r\n      const options = this._options;\r\n      const count = this._qr.getModuleCount();\r\n      const minSize = Math.min(options.width, options.height);\r\n      const dotSize = Math.floor(minSize / count);\r\n      const xBeginning = Math.floor((options.width - count * dotSize) / 2);\r\n      const yBeginning = Math.floor((options.height - count * dotSize) / 2);\r\n      const image = new Image();\r\n      const coverLevel =\r\n        options.imageOptions.imageSize * errorCorrectionPercents[options.qrOptions.errorCorrectionLevel];\r\n\r\n      if (!options.image) {\r\n        return reject(\"Image is not defined\");\r\n      }\r\n\r\n      this._image = image;\r\n      //TODO remove it from this place\r\n      image.onload = (): void => {\r\n        const maxHiddenDots = Math.floor(coverLevel * count * count);\r\n        const { width, height, hideXDots, hideYDots } = calculateImageSize({\r\n          originalWidth: image.width,\r\n          originalHeight: image.height,\r\n          maxHiddenDots,\r\n          maxHiddenAxisDots: count - 14,\r\n          dotSize\r\n        });\r\n\r\n        this.drawDots((i: number, j: number): boolean => {\r\n          if (!options.imageOptions.hideBackgroundDots) {\r\n            return true;\r\n          }\r\n          return (\r\n            i < (count - hideXDots) / 2 ||\r\n            i >= (count + hideXDots) / 2 ||\r\n            j < (count - hideYDots) / 2 ||\r\n            j >= (count + hideYDots) / 2\r\n          );\r\n        });\r\n\r\n        canvasContext.drawImage(\r\n          image,\r\n          xBeginning + (count * dotSize - width) / 2,\r\n          yBeginning + (count * dotSize - height) / 2,\r\n          width,\r\n          height\r\n        );\r\n        resolve();\r\n      };\r\n      image.src = options.image;\r\n    });\r\n  }\r\n\r\n  drawEyes(): void {\r\n    if (!this._qr) {\r\n      throw \"QR code is not defined\";\r\n    }\r\n\r\n    const canvas = this._canvas;\r\n    const canvasContext = this.context;\r\n    const options = this._options;\r\n    const count = this._qr.getModuleCount();\r\n\r\n    if (!canvasContext) {\r\n      throw \"QR code is not defined\";\r\n    }\r\n    if (count > options.width || count > options.height) {\r\n      throw \"The canvas is too small.\";\r\n    }\r\n\r\n    const minSize = Math.min(options.width, options.height);\r\n    const dotSize = Math.floor(minSize / count);\r\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\r\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\r\n\r\n    const qrEye = new QREye({\r\n      context: canvasContext,\r\n      options: options\r\n    });\r\n\r\n    qrEye.draw(xBeginning, yBeginning, dotSize);\r\n\r\n    canvasContext.save();\r\n    canvasContext.translate(canvas.width, 0);\r\n    canvasContext.scale(-1, 1);\r\n    qrEye.draw(xBeginning, yBeginning, dotSize);\r\n    canvasContext.restore();\r\n\r\n    canvasContext.save();\r\n    canvasContext.translate(0, canvas.height);\r\n    canvasContext.scale(1, -1);\r\n    qrEye.draw(xBeginning, yBeginning, dotSize);\r\n    canvasContext.restore();\r\n  }\r\n\r\n  private setupPositionProbeModules(row: number, col: number): void {\r\n    if (!this._qr) {\r\n      throw \"QR code is not defined\";\r\n    }\r\n\r\n    for (let r = -1; r <= 7; r += 1) {\r\n      for (let c = -1; c <= 7; c += 1) {\r\n        if (\r\n          row + r <= -1 ||\r\n          this._qr.getModuleCount() <= row + r ||\r\n          col + c <= -1 ||\r\n          this._qr.getModuleCount() <= col + c\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        if (\r\n          (0 <= r && r <= 6 && (c == 0 || c == 6)) ||\r\n          (0 <= c && c <= 6 && (r == 0 || r == 6)) ||\r\n          (2 <= r && r <= 4 && 2 <= c && c <= 4)\r\n        ) {\r\n          if (!(row + r in this._positionProbeModules)) {\r\n            this._positionProbeModules[row + r] = {};\r\n          }\r\n          this._positionProbeModules[row + r][col + c] = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","interface ImageSizeOptions {\r\n  originalHeight: number;\r\n  originalWidth: number;\r\n  maxHiddenDots: number;\r\n  maxHiddenAxisDots?: number;\r\n  dotSize: number;\r\n}\r\n\r\ninterface ImageSizeResult {\r\n  height: number;\r\n  width: number;\r\n  hideYDots: number;\r\n  hideXDots: number;\r\n}\r\n\r\nexport default function calculateImageSize({\r\n  originalHeight,\r\n  originalWidth,\r\n  maxHiddenDots,\r\n  maxHiddenAxisDots,\r\n  dotSize\r\n}: ImageSizeOptions): ImageSizeResult {\r\n  const hideDots = { x: 0, y: 0 };\r\n  const imageSize = { x: 0, y: 0 };\r\n\r\n  if (originalHeight <= 0 || originalWidth <= 0 || maxHiddenDots <= 0 || dotSize <= 0) {\r\n    return {\r\n      height: 0,\r\n      width: 0,\r\n      hideYDots: 0,\r\n      hideXDots: 0\r\n    };\r\n  }\r\n\r\n  const k = originalHeight / originalWidth;\r\n\r\n  //Getting the maximum possible axis hidden dots\r\n  hideDots.x = Math.floor(Math.sqrt(maxHiddenDots / k));\r\n  //The count of hidden dot's can't be less than 1\r\n  if (hideDots.x <= 0) hideDots.x = 1;\r\n  //Check the limit of the maximum allowed axis hidden dots\r\n  if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.x) hideDots.x = maxHiddenAxisDots;\r\n  //The count of dots should be odd\r\n  if (hideDots.x % 2 === 0) hideDots.x--;\r\n  imageSize.x = hideDots.x * dotSize;\r\n  //Calculate opposite axis hidden dots based on axis value.\r\n  //The value will be odd.\r\n  //We use ceil to prevent dots covering by the image.\r\n  hideDots.y = 1 + 2 * Math.ceil((hideDots.x * k - 1) / 2);\r\n  imageSize.y = Math.round(imageSize.x * k);\r\n  //If the result dots count is bigger than max - then decrease size and calculate again\r\n  if (hideDots.y * hideDots.x > maxHiddenDots || (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y)) {\r\n    if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y) {\r\n      hideDots.y = maxHiddenAxisDots;\r\n      if (hideDots.y % 2 === 0) hideDots.x--;\r\n    } else {\r\n      hideDots.y -= 2;\r\n    }\r\n    imageSize.y = hideDots.y * dotSize;\r\n    hideDots.x = 1 + 2 * Math.ceil((hideDots.y / k - 1) / 2);\r\n    imageSize.x = Math.round(imageSize.y / k);\r\n  }\r\n\r\n  return {\r\n    height: imageSize.y,\r\n    width: imageSize.x,\r\n    hideYDots: hideDots.y,\r\n    hideXDots: hideDots.x\r\n  };\r\n}\r\n","interface ErrorCorrectionLevels {\r\n  [key: string]: ErrorCorrectionLevel;\r\n}\r\n\r\nexport default {\r\n  L: \"L\",\r\n  M: \"M\",\r\n  Q: \"Q\",\r\n  H: \"H\"\r\n} as ErrorCorrectionLevels;\r\n","import qrTypes from \"../constants/qrTypes\";\r\nimport errorCorrectionLevels from \"../constants/errorCorrectionLevels\";\r\n\r\nexport type Options = {\r\n  width: number;\r\n  height: number;\r\n  data?: string;\r\n  image?: string;\r\n  qrOptions: {\r\n    typeNumber: TypeNumber;\r\n    mode?: Mode;\r\n    errorCorrectionLevel: ErrorCorrectionLevel;\r\n  };\r\n  imageOptions: {\r\n    hideBackgroundDots: boolean;\r\n    imageSize: number;\r\n  };\r\n  dotsOptions: {\r\n    type: DotType;\r\n    color: string;\r\n  };\r\n  eyeFramesOptions: {\r\n    type: EyeFrameType;\r\n    color: string;\r\n  };\r\n  eyeBallsOptions: {\r\n    type: EyeBallType;\r\n    color: string;\r\n  };\r\n  backgroundOptions: {\r\n    color: string;\r\n  };\r\n};\r\n\r\nconst defaultOptions: Options = {\r\n  width: 300,\r\n  height: 300,\r\n  data: undefined,\r\n  image: undefined,\r\n  qrOptions: {\r\n    typeNumber: qrTypes[0],\r\n    mode: undefined,\r\n    errorCorrectionLevel: errorCorrectionLevels.Q\r\n  },\r\n  imageOptions: {\r\n    hideBackgroundDots: true,\r\n    imageSize: 0.4\r\n  },\r\n  dotsOptions: {\r\n    type: \"square\",\r\n    color: \"#000\"\r\n  },\r\n  eyeFramesOptions: {\r\n    type: 0,\r\n    color: \"#000\"\r\n  },\r\n  eyeBallsOptions: {\r\n    type: 0,\r\n    color: \"#000\"\r\n  },\r\n  backgroundOptions: {\r\n    color: \"#fff\"\r\n  }\r\n};\r\n\r\nexport default defaultOptions;\r\n","import getMode from \"../tools/getMode\";\r\nimport mergeDeep from \"../tools/merge\";\r\nimport downloadURI from \"../tools/downloadURI\";\r\nimport QRCanvas from \"./QRCanvas\";\r\nimport defaultOptions, { Options } from \"./QROptions\";\r\nimport qrcode from \"qrcode-generator\";\r\n\r\nexport default class QRCodeStyling {\r\n  _options: Options;\r\n  _container?: HTMLElement;\r\n  _canvas?: QRCanvas;\r\n  _qr?: QRCode;\r\n\r\n  constructor(options?: Partial<Options>) {\r\n    this._options = options ? (mergeDeep(defaultOptions, options) as Options) : defaultOptions;\r\n    this.update();\r\n  }\r\n\r\n  static _clearContainer(container?: HTMLElement): void {\r\n    if (container) {\r\n      container.innerHTML = \"\";\r\n    }\r\n  }\r\n\r\n  update(options?: Partial<Options>): void {\r\n    QRCodeStyling._clearContainer(this._container);\r\n    this._options = options ? (mergeDeep(this._options, options) as Options) : this._options;\r\n\r\n    if (!this._options.data) {\r\n      return;\r\n    }\r\n\r\n    this._qr = qrcode(this._options.qrOptions.typeNumber, this._options.qrOptions.errorCorrectionLevel);\r\n    this._qr.addData(this._options.data, this._options.qrOptions.mode || getMode(this._options.data));\r\n    this._qr.make();\r\n    this._canvas = new QRCanvas(this._options);\r\n    this._canvas.drawQR(this._qr);\r\n    this.append(this._container);\r\n  }\r\n\r\n  append(container?: HTMLElement): void {\r\n    if (!container) {\r\n      return;\r\n    }\r\n\r\n    if (typeof container.appendChild !== \"function\") {\r\n      throw \"Container should be a single DOM node\";\r\n    }\r\n\r\n    if (this._canvas) {\r\n      container.appendChild(this._canvas.getCanvas());\r\n    }\r\n\r\n    this._container = container;\r\n  }\r\n\r\n  download(extension?: Extension): void {\r\n    if (!this._canvas) return;\r\n    const data = this._canvas.getCanvas().toDataURL(extension ? `image/${extension}` : undefined);\r\n    downloadURI(data, `qr.${extension || \"png\"}`);\r\n  }\r\n\r\n  getQRCanvas(): QRCanvas | undefined {\r\n    return this._canvas;\r\n  }\r\n}\r\n","import modes from \"../constants/modes\";\r\n\r\nexport default function getMode(data: string): Mode {\r\n  switch (true) {\r\n    case /^[0-9]*$/.test(data):\r\n      return modes.numeric;\r\n    case /^[0-9A-Z $%*+\\-./:]*$/.test(data):\r\n      return modes.alphanumeric;\r\n    default:\r\n      return modes.byte;\r\n  }\r\n}\r\n","export default function downloadURI(uri: string, name: string): void {\r\n  const link = document.createElement(\"a\");\r\n  link.download = name;\r\n  link.href = uri;\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}\r\n","export default {\r\n  dots: \"dots\",\r\n  rounded: \"rounded\",\r\n  square: \"square\"\r\n} as DotTypes;\r\n","import QRCodeStyling from \"./core/QRCodeStyling\";\r\nimport dotTypes from \"./constants/dotTypes\";\r\nimport errorCorrectionLevels from \"./constants/errorCorrectionLevels\";\r\nimport errorCorrectionPercents from \"./constants/errorCorrectionPercents\";\r\nimport modes from \"./constants/modes\";\r\nimport qrTypes from \"./constants/qrTypes\";\r\n\r\nexport default QRCodeStyling;\r\nexport { dotTypes, errorCorrectionLevels, errorCorrectionPercents, modes, qrTypes };\r\n"],"sourceRoot":""}